version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: auth_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-go_login}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-postgres}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "${POSTGRES_EXTERNAL_PORT:-8888}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${POSTGRES_DB:-go_login}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  app:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    container_name: auth_app
    environment:
      APP_ENV: ${APP_ENV:-production}
      PORT: ${PORT:-8080}
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-postgres}
      DB_PASS: ${DB_PASS:-postgres}
      DB_NAME: ${DB_NAME:-go_login}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      ACCESS_TOKEN_EXP: ${ACCESS_TOKEN_EXP:-15m}
      REFRESH_TOKEN_EXP: ${REFRESH_TOKEN_EXP:-168h}
    ports:
      - "${APP_EXTERNAL_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
